@startuml
allowmixing

class ToDoItem {
    public String description
    public LocalDate dueDate
    public boolean isComplete
    public void setDescription(String s)
    public void setDueDate(LocalDate d)
    public void markAsComplete()
    public void markAsIncomplete()
}
class ToDoList{
    public String title
    public ArrayList<ToDoItem> toDoList
    public void addItem(ToDoItem t)
    public ToDoItem removeItem(int index)
    public void setTitle(String s)
    public void editToDoItemDesc(int index,String s)
    public void editToDoItemDueDate(int index, LocalDate d)
    public void markItemAsComplete(int index)
    public void markItemAsIncomplete(int index)
    public void saveToDoList(String path)
    public ToDoList loadToDoList(String path)
    public String getJsonString(String path)
    public ToDoList replaceInDesc( ToDoList t,String lookingFor, String replaced)
    public void addToDoListItemsToCurrentList(ToDoList t)
    public void clearAllItems()
}
class App{
    public static ToDoList tm
    public static Integer currentItem
    public static Integer sortByValue
    public void start()
    public static void main()
}
class ToDoListViewController{
     private Button addItemButton
     private Button saveButton
     private  Button sortByButton
     private AnchorPane toDoListItemAnchorPane

     public ArrayList<ToDoItem> displayToDoList(ToDoList t,int val)
     public void displayToDoList()
     private ArrayList<ToDoItem> display(ArrayList<ToDoItem> items,int sortByValue)/testing version
     private void display(ArrayList<ToDoItem> items)
     private HBox[] toHboxArray(ArrayList<HBox> src)
     private HBox createItemHbox(int x, ToDoItem item)
     private void loadSortView(ActionEvent event)
     private void loadAddItemView(ActionEvent event)
     private void loadEditItemView(ActionEvent event,int i)
     private void onSaveButtonClick(ActionEvent e)
     private void onLoadButtonClick(ActionEvent e)
     private void onClearAllButtonClick(ActionEvent e)
     private void  loadBiggerDescriptionView(ActionEvent e, int i)
}

class CreateListItemViewController{
     private DatePicker dateChosen
     private TextField description
     private Button cancelButton
     private Button createButton

    private void onCancelButtonClick(ActionEvent event)
    private void onCreateButtonClick(ActionEvent event)
}

class EditListItemViewController{
    private DatePicker datePicker
    private TextField description
    private Button backButton
    private Button okayButton

    private void loadToDoListView(ActionEvent event)
    private void onOkayButtonClick(ActionEvent event)
}

class SortByViewController{
    private Button backButton;
    private void loadToDoListView(ActionEvent event)
    private void sortByExistingItems(ActionEvent event)
    private void sortByCompleteItems(ActionEvent event)
    private void sortByIncompleteItems(ActionEvent event)
}

class DescriptionFieldController{
    private Label descLabel
    public void setDescLabel(int index)

}

frame GUI{
}
person user
File save.txt

GUI<-- user
GUI<--ToDoListViewController
ToDoList<--GUI
ToDoList<-- save.txt
save.txt<--ToDoList

App<--ToDoList
ToDoList<--ToDoItem


ToDoListViewController<--EditListItemViewController
ToDoListViewController<-- DescriptionFieldController
ToDoListViewController<--SortByViewController
ToDoListViewController<--CreateListItemViewController
ToDoListViewController<--App

CreateListItemViewController<--ToDoListViewController
SortByViewController<--ToDoListViewController
EditListItemViewController<--ToDoListViewController
DescriptionFieldController<--ToDoListViewController
@enduml